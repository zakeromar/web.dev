stages:
  - build
  - deploy

include:
  - file: .rule-template.yml
    project: zarebin-public/cicd-template
  - file: .scan-template.yml
    project: zarebin-public/cicd-template

build_journey_next_dev:
  image: hamravesh.hamdocker.ir/public/darkube-cli:v1.1
  only:
    refs:
      - dev
  script:
    - export IMAGE=docker.mci.dev/darkube/mci/journey_next
    - darkube build -f . --push -t $IMAGE:$CI_COMMIT_SHORT_SHA -t $IMAGE:$CI_COMMIT_REF_SLUG
      --workdir . --build-arg CICD_REPO_USER=$CICD_REPO_USER --build-arg CICD_REPO_PASS=$CICD_REPO_PASS
  stage: build

build_journey_next_stage:
  extends:
    - .staging_build
  script:
    - export IMAGE=docker.mci.dev/darkube/mci/journey_next
    - darkube build --push -t $IMAGE:$CI_COMMIT_TAG -t $IMAGE:$CI_COMMIT_REF_SLUG  --workdir
      . --file ./Dockerfile --build-context . --build-arg CICD_REPO_USER=$CICD_REPO_USER --build-arg CICD_REPO_PASS=$CICD_REPO_PASS
  stage: build

all_deploy_dev:
  only:
    refs:
      - develop
  stage: deploy
  trigger:
    branch: main
    project: mse/journey/journey-next
  variables:
    APP_NAME: 'journey-next'
    CHART_YAML_PATH: values.yaml
    ENV: dev
    IMAGE_TAG: $CI_COMMIT_SHORT_SHA

all_deploy_stage:
  extends: .staging_deploy
  stage: deploy
  trigger:
    branch: master
    project: mse/journey/journey-ops
  variables:
    APP_NAME: APP_NAME
    CHART_YAML_PATH: values.yaml
    ENV: stage
    IMAGE_TAG: $CI_COMMIT_TAG

all_deploy_prod:
  extends: .staging_deploy
  stage: deploy
  trigger:
    branch: prod
    project: mse/journey/journey-ops
  variables:
    APP_NAME: 'journey-next'
    CHART_YAML_PATH: values.yaml
    ENV: prod
    IMAGE_TAG: $CI_COMMIT_TAG

assistant-app_container_scan:
  extends:
    - .container_scan
  variables:
    IMAGE: docker.mci.dev/darkube/mci/assistant-app
